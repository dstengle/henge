<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (C) ${project.inceptionYear} Kenzan - Kyle S. Bober (kbober@kenzan.com) 
	Licensed under the Apache License, Version 2.0 (the "License"); you may not 
	use this file except in compliance with the License. You may obtain a copy 
	of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required 
	by applicable law or agreed to in writing, software distributed under the 
	License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS 
	OF ANY KIND, either express or implied. See the License for the specific 
	language governing permissions and limitations under the License. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.kenzan.henge</groupId>
	<artifactId>henge-parent</artifactId>
	<version>0.9.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<url>https://github.com/kenzanmedia/propertiesservice</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<endorsed.dir>${project.build.directory}/endorsed</endorsed.dir>
		<compile.version>1.8</compile.version>

		<!-- API versions -->
		<spring.boot.version>1.3.3.RELEASE</spring.boot.version>
		<spring.cloud.version>1.0.6.RELEASE</spring.cloud.version>
		<spring.netflix.version>1.0.6.RELEASE</spring.netflix.version>
		<spring.framework.version>4.2.5.RELEASE</spring.framework.version>
		<karyon.version>1.0.27</karyon.version>
		<archiaus.version>0.6.2</archiaus.version>
		<hystrix.version>1.3.20</hystrix.version>
		<astyanax.version>1.56.16</astyanax.version>
		<rxjava.version>0.19.2</rxjava.version>
		<servlet.api.version>3.1.0</servlet.api.version>

		<apache.shiro.version>1.2.4</apache.shiro.version>
		<netty.version>3.6.1.Final</netty.version>
		<jackson.version>2.8.0</jackson.version>
		<hibernate.version>4.3.8.Final</hibernate.version>
		<flyway.version>3.2.1</flyway.version>
		<mysql.version>5.1.22</mysql.version>
		<h2.version>1.4.186</h2.version>
		<bonecp.version>0.8.0.RELEASE</bonecp.version>
		<guava.version>18.0</guava.version>
		<guice.version>3.0</guice.version>
		<hibernate.validator.version>5.1.3.Final</hibernate.validator.version>

		<joda-time.version>2.7</joda-time.version>
		<joda-time.hibernate.version>1.3</joda-time.hibernate.version>
		<commons.lang.version>2.6</commons.lang.version>
		<common.logging.version>1.1.3</common.logging.version>
		<commons.beanutils.version>1.7.0</commons.beanutils.version>
		<commons.codec.version>1.9</commons.codec.version>
		<commons.io.version>2.4</commons.io.version>
		<commons.collection.version>3.2.2</commons.collection.version>
		<slf4j.version>1.7.6</slf4j.version>
		<logback.version>1.1.3</logback.version>

		<junit.version>4.11</junit.version>
		<mockito.version>1.10.19</mockito.version>
		<assertj.version>2.1.0</assertj.version>

		<!-- Metrics APIs -->
		<metrics.version>3.1.2</metrics.version>
		<metrics-spring.version>3.1.3</metrics-spring.version>

		<!-- Plugin versions -->
		<maven.compiler.version>3.3</maven.compiler.version>
		<maven.source.version>2.4</maven.source.version>
		<maven.resources.version>2.7</maven.resources.version>
		<maven.jar.version>2.6</maven.jar.version>
		<maven.war.version>2.6</maven.war.version>
		<maven.surefire.version>2.14</maven.surefire.version>
		<failsafe.version>2.18.1</failsafe.version>
		<jgit-flow.version>1.0-m5.1</jgit-flow.version>
		<enforcer.version>1.4</enforcer.version>
		<exec.version>1.2.1</exec.version>

		<!-- Swagger version for the 2.x Swagger Specification -->
		<swagger.version>1.5.0</swagger.version>
		<!-- Maven Swagger Plugin version for Swagger 2.x -->
		<swagger.plugin.version>3.1.0</swagger.plugin.version>
		<swagger.plugin.schemes>https</swagger.plugin.schemes>
		<swagger.plugin.host>localhost:8080</swagger.plugin.host>
		<swagger.plugin.basePath>/henge</swagger.plugin.basePath>

		<!-- Webapp properties -->
		<context.root>henge</context.root>

		<!-- Datastore Properties -->
		<db.user>admin</db.user>
		<db.password>password</db.password>
		<db.host>127.0.0.1</db.host>
		<db.port>3306</db.port>
		<db.jdbc.connection>jdbc:mysql://${db.host}</db.jdbc.connection>

		<!-- Sonar and JaCoCo -->
		<jacoco.plugin.version>0.7.5.201505241946</jacoco.plugin.version>

		<sonar.language>java</sonar.language>
		<sonar.exclusions>
			**/config/*,
			**/stub/*,
			**/exception/*
		</sonar.exclusions>
	</properties>



	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
			<comments>A business-friendly OSS license</comments>
		</license>
	</licenses>

	<dependencyManagement>
		<dependencies>
			<!-- Internal Module Dependencies -->
			<dependency>
				<groupId>com.kenzan.henge</groupId>
				<artifactId>henge-domain</artifactId>
				<scope>compile</scope>
				<version>0.9.1-SNAPSHOT</version>
			</dependency>

			<dependency>
				<groupId>com.kenzan.henge</groupId>
				<artifactId>henge-repository</artifactId>
				<version>0.9.1-SNAPSHOT</version>
				<scope>compile</scope>
			</dependency>

			<dependency>
				<groupId>com.kenzan.henge</groupId>
				<artifactId>henge-service</artifactId>
				<scope>compile</scope>
				<version>0.9.1-SNAPSHOT</version>
			</dependency>

			<!-- Spring Boot Dependencies - Use this when not inheriting from the 
				Spring Boot Parent POM -->
			<dependency>
				<!-- Import dependency management from Spring Boot -->
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring.boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-netflix</artifactId>
				<version>${spring.cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<!-- Spring Boot & Spring Dependencies -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-web</artifactId>
				<version>${spring.boot.version}</version>
				<scope>compile</scope>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-jersey</artifactId>
				<version>${spring.boot.version}</version>
				<scope>compile</scope>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-actuator</artifactId>
				<version>${spring.boot.version}</version>
				<scope>compile</scope>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-security</artifactId>
				<version>${spring.boot.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-cache</artifactId>
				<version>${spring.boot.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-eureka-server</artifactId>
				<version>${spring.cloud.version}</version>
			</dependency>



			<!-- <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-thymeleaf</artifactId> 
				<version>${spring.boot.version}</version> <scope>compile</scope> </dependency> 
				<dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-hateoas</artifactId> 
				<version>${spring.boot.version}</version> <scope>compile</scope> </dependency> 
				<dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-data-jpa</artifactId> 
				<version>${spring.boot.version}</version> <scope>compile</scope> </dependency> 
				<dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-jdbc</artifactId> 
				<version>${spring.boot.version}</version> <scope>compile</scope> </dependency> -->

			<!-- Netty <dependency> <groupId>io.netty</groupId> <artifactId>netty</artifactId> 
				<version>${netty.version}</version> <scope>compile</scope> </dependency> -->

			<!-- Shiro -->
			<!-- <dependency> <groupId>org.apache.shiro</groupId> <artifactId>shiro-core</artifactId> 
				<version>${apache.shiro.version}</version> <scope>compile</scope> </dependency> 
				<dependency> <groupId>org.apache.shiro</groupId> <artifactId>shiro-web</artifactId> 
				<version>${apache.shiro.version}</version> <scope>compile</scope> </dependency> 
				<dependency> <groupId>org.apache.shiro</groupId> <artifactId>shiro-spring</artifactId> 
				<version>${apache.shiro.version}</version> <scope>compile</scope> </dependency> -->

			<!-- JSR-303 & JSR-349 -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>${hibernate.validator.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.el</groupId>
				<artifactId>javax.el-api</artifactId>
				<version>2.2.4</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.web</groupId>
				<artifactId>javax.el</artifactId>
				<version>2.2.4</version>
			</dependency>

			<!-- Jackson -->
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-annotations</artifactId>
				<version>${jackson.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>${jackson.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.jaxrs</groupId>
				<artifactId>jackson-jaxrs-json-provider</artifactId>
				<version>${jackson.version}</version>
				<scope>compile</scope>
			</dependency>
			<!-- <dependency> <groupId>com.fasterxml.jackson.datatype</groupId> <artifactId>jackson-datatype-joda</artifactId> 
				<version>${jackson.version}</version> <scope>compile</scope> </dependency> -->
			<dependency>
				<groupId>com.fasterxml.jackson.datatype</groupId>
				<artifactId>jackson-datatype-jsr310</artifactId>
				<version>${jackson.version}</version>
				<scope>compile</scope>
			</dependency>

			<!-- Guava -->
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
				<scope>compile</scope>
			</dependency>

			<!-- Joda Time -->
			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>${joda-time.version}</version>
				<scope>compile</scope>
			</dependency>

			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time-hibernate</artifactId>
				<version>${joda-time.hibernate.version}</version>
				<scope>compile</scope>
			</dependency>

			<!-- Apache Commons -->
			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>${commons.codec.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>${commons.lang.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>commons-collections</groupId>
				<artifactId>commons-collections</artifactId>
				<version>${commons.collection.version}</version>
			</dependency>

			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons.io.version}</version>
				<scope>compile</scope>
			</dependency>

			<!-- Servlet -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>${servlet.api.version}</version>
				<scope>provided</scope>
			</dependency>

			<!-- Swagger -->
			<dependency>
				<groupId>io.swagger</groupId>
				<artifactId>swagger-jersey2-jaxrs</artifactId>
				<version>${swagger.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.glassfish.jersey.media</groupId>
						<artifactId>jersey-media-multipart</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>io.swagger</groupId>
				<artifactId>swagger-annotations</artifactId>
				<version>${swagger.version}</version>
			</dependency>

			<!-- Flyway -->
			<dependency>
				<groupId>org.flywaydb</groupId>
				<artifactId>flyway-core</artifactId>
				<version>${flyway.version}</version>
				<scope>runtime</scope>
			</dependency>

			<!-- MySQL -->
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql.version}</version>
				<scope>runtime</scope>
			</dependency>

			<!-- H2 Database -->
			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
				<version>${h2.version}</version>
			</dependency>

			<!-- BoneCP -->
			<dependency>
				<groupId>com.jolbox</groupId>
				<artifactId>bonecp</artifactId>
				<version>${bonecp.version}</version>
			</dependency>

			<!-- SLF4J Logging -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
				<scope>compile</scope>
			</dependency>

			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback.version}</version>
			</dependency>

			<!-- Logback -->
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-core</artifactId>
				<version>${logback.version}</version>
			</dependency>

			<!-- Testing Libraries -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-test</artifactId>
				<version>${spring.boot.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.assertj</groupId>
				<artifactId>assertj-core</artifactId>
				<!-- use 2.1.0 for Java < 8 projects -->
				<!-- use 3.1.0 for Java >= 8 projects -->
				<version>${assertj.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>com.jayway.restassured</groupId>
				<artifactId>rest-assured</artifactId>
				<version>2.7.0</version>
				<scope>test</scope>
			</dependency>

			<!-- Dropwizard Metrics -->
			<dependency>
				<groupId>io.dropwizard.metrics</groupId>
				<artifactId>metrics-core</artifactId>
				<version>${metrics.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>io.dropwizard.metrics</groupId>
				<artifactId>metrics-annotation</artifactId>
				<version>${metrics.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>io.dropwizard.metrics</groupId>
				<artifactId>metrics-healthchecks</artifactId>
				<version>${metrics.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>com.ryantenney.metrics</groupId>
				<artifactId>metrics-spring</artifactId>
				<version>${metrics-spring.version}</version>
				<scope>compile</scope>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aspects</artifactId>
				<version>${spring.framework.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context-support</artifactId>
				<version>${spring.framework.version}</version>
				<scope>compile</scope>
			</dependency>

			<!-- Amazon AWS SDK -->
			<dependency>
				<groupId>com.amazonaws</groupId>
				<artifactId>aws-java-sdk</artifactId>
				<version>1.10.52</version>
			</dependency>

			<!-- ASCIIDoctorJ -->
			<dependency>
				<groupId>org.asciidoctor</groupId>
				<artifactId>asciidoctorj</artifactId>
				<version>1.5.3</version>
			</dependency>

			<!-- Cassandra -->
			<dependency>
				<groupId>com.datastax.cassandra</groupId>
				<artifactId>cassandra-driver-core</artifactId>
				<version>3.0.0</version>
			</dependency>

			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-all</artifactId>
				<version>${mockito.version}</version>
			</dependency>

			<!-- Jersey -->
			<!-- <dependency> -->
			<!-- <artifactId>jersey-core</artifactId> -->
			<!-- <groupId>com.sun.jersey</groupId> -->
			<!-- <version>1.19.1</version> -->
			<!-- </dependency> -->
			<dependency>
				<groupId>org.glassfish.jersey.media</groupId>
				<artifactId>jersey-media-multipart</artifactId>
				<version>2.22.1</version>
			</dependency>

			<dependency>
				<groupId>com.sun.jersey.contribs</groupId>
				<artifactId>jersey-apache-client4</artifactId>
				<version>1.19.1</version>
			</dependency>

			<!-- <dependency> -->
			<!-- <groupId>com.sun.jersey</groupId> -->
			<!-- <artifactId>jersey-server</artifactId> -->
			<!-- <version>1.19.1</version> -->
			<!-- </dependency> -->
			<!-- <dependency> -->
			<!-- <artifactId>jersey-client</artifactId> -->
			<!-- <groupId>com.sun.jersey</groupId> -->
			<!-- <version>1.19.1</version> -->
			<!-- </dependency> -->

			<dependency>
				<groupId>org.jvnet.mimepull</groupId>
				<artifactId>mimepull</artifactId>
				<version>1.9.6</version>
			</dependency>

			<dependency>
				<groupId>com.github.davidb</groupId>
				<artifactId>metrics-influxdb</artifactId>
				<version>0.8.2</version>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>io.fabric8</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>0.15.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven.compiler.version}</version>
					<configuration>
						<source>${compile.version}</source>
						<target>${compile.version}</target>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven.source.version}</version>
					<executions>
						<execution>
							<id>attach-sources</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven.resources.version}</version>
					<configuration>
						<outputDirectory />
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven.jar.version}</version>
					<configuration>
						<archive>
							<manifest>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							</manifest>
						</archive>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<!-- Lock down plugin version for build reproducibility -->
					<version>${maven.surefire.version}</version>
					<executions>
						<execution>
							<id>default-test</id>
							<configuration>
								<forkMode>always</forkMode>
								<argLine>${argLine} -Xmx4096m -XX:MaxPermSize=2048m</argLine>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>${maven.war.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>${exec.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>${enforcer.version}</version>
					<executions>
						<execution>
							<id>enforce</id>
							<configuration>
								<rules>
									<requireMavenVersion>
										<version>[3.0.2,)</version>
									</requireMavenVersion>
									<requireJavaVersion>
										<version>${compile.version}</version>
									</requireJavaVersion>
									<DependencyConvergence />
								</rules>
							</configuration>
							<goals>
								<goal>enforce</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>external.atlassian.jgitflow</groupId>
					<artifactId>jgitflow-maven-plugin</artifactId>
					<version>${jgit-flow.version}</version>
					<configuration>
						<autoVersionSubmodules>true</autoVersionSubmodules>
						<noDeploy>true</noDeploy>
						<pushFeatures>true</pushFeatures>
						<pushReleases>true</pushReleases>
						<pushHotfixes>true</pushHotfixes>
						<flowInitContext>
							<masterBranchName>master</masterBranchName>
							<developBranchName>develop</developBranchName>
							<featureBranchPrefix>feature-</featureBranchPrefix>
							<releaseBranchPrefix>release-</releaseBranchPrefix>
							<hotfixBranchPrefix>hotfix-</hotfixBranchPrefix>
							<versionTagPrefix>${context.root}-tag-</versionTagPrefix>
						</flowInitContext>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring.boot.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>repackage</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>com.github.kongchen</groupId>
					<artifactId>swagger-maven-plugin</artifactId>
					<version>${swagger.plugin.version}</version>
					<executions>
						<execution>
							<phase>compile</phase>
							<goals>
								<goal>generate</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>com.mycila</groupId>
					<artifactId>license-maven-plugin</artifactId>
					<version>2.11</version>
					<configuration>
						<header>com/mycila/maven/plugin/license/templates/APACHE-2.txt</header>
						<properties>
							<owner>Kenzan - Kyle S. Bober</owner>
							<email>kbober@kenzan.com</email>
						</properties>
						<excludes>
							<exclude>.factorypath</exclude>
							<exclude>LICENSE</exclude>
							<!-- <excldue>**/pom.xml/**</excldue> -->
							<exclude>**/appserver/**</exclude>
							<exclude>**/documentation/**</exclude>
							<exclude>**/README</exclude>
							<exclude>src/test/resources/**</exclude>
							<exclude>src/main/resources/**</exclude>
						</excludes>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-eclipse-plugin</artifactId>
					<configuration>
						<downloadSources>true</downloadSources>
						<downloadJavadocs>true</downloadJavadocs>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.asciidoctor</groupId>
										<artifactId>asciidoctor-maven-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>process-asciidoc</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnIncremental>false</runOnIncremental>
										</execute>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.github.kongchen</groupId>
										<artifactId>swagger-maven-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>generate</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnIncremental>false</runOnIncremental>
										</execute>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<id>recreate-schema</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>recreate schema</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>mysql</executable>
									<arguments>
										<argument>-h${db.host}</argument>
										<argument>-u${db.user}</argument>
										<argument>-p${db.password}</argument>
										<argument>-e drop schema if exists properties; create schema
											properties;</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>sonar-coverage</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.jacoco</groupId>
							<artifactId>jacoco-maven-plugin</artifactId>
							<version>${jacoco.plugin.version}</version>
						</plugin>
					</plugins>
				</pluginManagement>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<configuration>
							<append>true</append>
						</configuration>
						<executions>
							<execution>
								<id>agent-for-ut</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
							<execution>
								<id>agent-for-it</id>
								<goals>
									<goal>prepare-agent-integration</goal>
								</goals>
							</execution>
							<execution>
								<id>jacoco-site</id>
								<phase>verify</phase>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<!-- ASCIIDoctor Maven Plugin Configuration -->
					<plugin>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctor-maven-plugin</artifactId>
						<version>1.5.3</version>
						<inherited>false</inherited>
						<executions>
							<execution>
								<id>output-html</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<sourceDirectory>src/main/resources/asciidoc/src</sourceDirectory>
							<outputDirectory>${project.basedir}/documentation</outputDirectory>
							<sourceHighlighter>coderay</sourceHighlighter>
							<backend>html5</backend>
							<doctype>article</doctype>
							<attributes>
								<toc />
								<linkcss>false</linkcss>
							</attributes>
							<imagesDir>./</imagesDir>
						</configuration>
					</plugin>

				</plugins>
			</build>
		</profile>
	</profiles>

	<modules>
		<module>henge-domain</module>
		<module>henge-repository</module>
		<module>henge-service</module>
		<module>henge-war</module>
		<module>eureka-server</module>
		<module>henge-docker</module>
	</modules>

	<!-- Developer's section -->
	<developers>
		<developer>
			<id>kbober</id>
			<name>Kyle S. Bober</name>
			<email>kyle.bober@gmail.com</email>
			<url>http://www.kbss.com</url>
			<organization>KBSS</organization>
			<organizationUrl>http://www.kbss.com</organizationUrl>
			<roles>
				<role>developer</role>
			</roles>
			<timezone>-5</timezone>
		</developer>
		<developer>
			<id>wmatsushita</id>
			<name>Wagner Yukio Matsushita</name>
			<email>wagneryukio@gmail.com</email>
			<roles>
				<role>developer</role>
			</roles>
			<timezone>-3</timezone>
		</developer>
		<developer>
			<id>ishiohara</id>
			<name>Igor K. Shiohara</name>
			<email>ishiohara@gmail.com</email>
			<roles>
				<role>developer</role>
			</roles>
		</developer>
	</developers>

</project>
